<div id="right_column" class="sidebar right_column" role="complementary">
  <% if @info_request.embargo %>
  <div class="sidebar__section update-embargo">
    <h2 class="embargo-sidebar-heading">
      <i class="embargo-indicator embargo-indicator--small"></i>
      <%= _("Privacy") %>
    </h2>
    <label class="houdini-label" for="input1"><%= _("Change privacy") %></label>
    <input class="houdini-input" type="checkbox" id="input1">
    <div class="houdini-target extend-embargo-sidebar">
      <%= form_for(
            [AlaveteliPro::EmbargoExtension.new(embargo: @info_request.embargo)],
            html: {class: 'js-embargo-form'}) do |f| %>
        <%= render partial: "alaveteli_pro/info_requests/embargo_info",
                   locals: {embargo: @info_request.embargo, tense: :present} %>
        <%= f.hidden_field :embargo_id %>

        <p>
          <label class="form_label" for="alaveteli_pro_embargo_extension_extension_duration">
            <%= _('Keep private for a further:') %>
          </label>
          <%= f.select :extension_duration,
                       options_for_select(embargo_extension_options(@info_request.embargo)),
                       {},
                       { class: 'js-embargo-duration' } %>
          <input type="submit"
                 value="<%= _("Update") %>"
                 class="embargo__submit">
        </p>
      <% end %>
      <%= button_to "Publish request",
                    alaveteli_pro_embargo_path(@info_request.embargo),
                    method: :delete,
                    data: {
                      confirm: _("Are you sure you want to publish this request?")
                    } %>
    </div>
  </div>
  <% end %>
  <% unless state_transitions_empty?(@state_transitions) %>
    <div class="sidebar__section update-status">
      <h2><%= _("Status") %></h2>
      <label class="houdini-label" for="input2"><%= _("Change status") %></label>
      <input class="houdini-input" type="checkbox" id="input2">
      <div class="status-picker houdini-target">
        <%= form_for([:alaveteli_pro, @info_request], html: {class: 'js-status-picker-form'}) do |f| %>
          <ul class="status-picker__options">
            <% @state_transitions.each do |group, transitions| %>
              <% transitions.each do |state, label| %>
                <% checked = @info_request.described_state == state %>
                <li class="status-picker__option status-picker__option--<%= state.dasherize %> <%= 'status-picker__option--selected' if checked %>">
                  <%= f.label :described_state, value: state do %>
                    <%= f.radio_button :described_state, state, checked: checked %>
                    <%= label %>
                  <% end %>
                </li>
              <% end %>
            <% end %>
          </ul>
          <input type="submit" value="<%= _("Update") %>" class="status-picker__submit">
        <% end %>
      </div>
    </div>
  <% end %>
</div>
